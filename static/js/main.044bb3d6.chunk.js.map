{"version":3,"sources":["components/ImageCard/ImageCard.tsx","components/ViewSingle/ViewSingle.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["ImageCard","imgSrc","description","url","className","loading","src","alt","ViewSingle","props","location","useLocation","history","useHistory","imageId","useRef","pathname","image","current","$","window","scrollTop","onClick","goBack","download_url","App","id","useState","elements","setElements","loaded","setLoaded","a","fetch","response","json","images","console","log","newElements","i","length","push","error","getImageCard","to","author","slice","indexOf","useEffect","getImages","addEventListener","maxHeight","height","map","imageArray","elementsArray","newImage","scrollDownListener","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.044bb3d6.chunk.js","sourcesContent":["import './ImageCard.css';\r\n\r\ninterface Props {\r\n    imgSrc: string;\r\n    description: string;\r\n    url: string;\r\n}\r\n\r\nfunction ImageCard({\r\n    imgSrc = '',\r\n    description = '',\r\n    url = '',\r\n}: Partial<Props>) {\r\n    return (\r\n        <div className=\"image-card\">\r\n            <img\r\n                loading=\"lazy\"\r\n                src={\r\n                    imgSrc ||\r\n                    'https://miro.medium.com/max/1024/1*Pzwe6jKF3Wb4fRHXPdZXyw.png'\r\n                }\r\n                alt=\"deno\"\r\n            />\r\n            <div className=\"body\">\r\n                <div className=\"description\">{description}</div>\r\n                <span>{url}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageCard;\r\n","import React, { useRef } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { ImageJson } from '../App/App';\r\nimport { GrClose } from 'react-icons/gr';\r\nimport './ViewSingle.css';\r\n\r\ninterface Props {\r\n    image?: ImageJson;\r\n}\r\n\r\nfunction ViewSingle(props: Props) {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const imageId = useRef(location.pathname);\r\n\r\n    if (props.image && imageId.current !== location.pathname) {\r\n        $(window).scrollTop(0);\r\n    }\r\n\r\n    imageId.current = location.pathname;\r\n\r\n    function goBack() {\r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <div className=\"view-image\">\r\n            {props.image && (\r\n                <div>\r\n                    <GrClose className=\"close\" onClick={goBack} />\r\n                    <img src={props.image.download_url} alt=\"view single\" />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewSingle;\r\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport ImageCard from '../ImageCard/ImageCard';\nimport ViewSingle from '../ViewSingle/ViewSingle';\nimport './App.css';\n\nexport interface ImageJson {\n    id: string;\n    author: string;\n    url: string;\n    download_url: string;\n    height: number;\n    width: number;\n}\n\nfunction App() {\n    const [elements, setElements] = useState<ImageJson[][]>([[], []]);\n    const [loaded, setLoaded] = useState<boolean>(false);\n    const location = useLocation();\n\n    async function getImages() {\n        try {\n            const response = await fetch(\n                'https://picsum.photos/v2/list?list=50'\n            );\n            const images: ImageJson[] = await response.json();\n            console.log(images);\n            const newElements: ImageJson[][] = [[], []];\n            for (let i = 0; i < images.length; i++) {\n                newElements[i % 2].push(images[i]);\n            }\n            setElements(newElements);\n            setLoaded(true);\n        } catch (error) {\n            console.error('FAILED TO GET IMAGES');\n            console.error(error);\n        }\n    }\n\n    function findImageById(id: string): ImageJson | undefined {\n        return (\n            elements[0].find((image) => image.id === id) ||\n            elements[1].find((image) => image.id === id)\n        );\n    }\n\n    function scrollDownListener() {\n        function addFrontToBack(\n            imageArray: ImageJson[],\n            i: number,\n            elementsArray: ImageJson[][]\n        ): ImageJson[] {\n            const newImage = elementsArray[(i + 1) % 2][imageArray.length - 15];\n            // we keep the same reference for the event listener, so we have to modify the array in place\n            imageArray.push({ ...newImage, id: newImage.id + 'x' });\n            return imageArray;\n        }\n\n        const maxHeight = $('#root').height()! - $(window).height()!;\n        const scrollTop = $(window).scrollTop()!;\n\n        if (elements[0].length && scrollTop >= maxHeight - 400) {\n            const newElements = elements.map(addFrontToBack);\n            setElements(newElements);\n        }\n    }\n\n    function normalizeUrl(url: string): string {\n        return url.slice(0, url.indexOf('/', 8));\n    }\n\n    function getImageCard(image: ImageJson) {\n        return (\n            <Link key={image.id + 'l'} to={image.id}>\n                <ImageCard\n                    key={image.id}\n                    imgSrc={image.download_url}\n                    description={image.author}\n                    url={normalizeUrl(image.url)}\n                />\n            </Link>\n        );\n    }\n\n    useEffect(() => {\n        getImages();\n    }, []);\n\n    useEffect(() => {\n        if (loaded) {\n            window.addEventListener('scroll', () => {\n                scrollDownListener();\n            });\n        }\n        // this depends on elements, but it doesn't need to keep in\n        // sync, since it only adds a scroll listener on load.\n        //\n        // eslint-disable-next-line\n    }, [loaded]);\n\n    return (\n        <div className=\"app\">\n            <ViewSingle image={findImageById(location.pathname.slice(1))} />\n            <div className=\"row\">\n                <div className=\"column\">\n                    {elements[0].map((image) => getImageCard(image))}\n                </div>\n                <div className=\"column\">\n                    {elements[1].map((image) => getImageCard(image))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}